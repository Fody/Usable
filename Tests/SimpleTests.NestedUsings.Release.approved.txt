.class public auto ansi beforefieldinit SimpleCases
       extends [mscorlib]System.Object
{
  .method public hidebysig instance void 
          NestedUsings() cil managed
  {
    // Code size       71 (0x47)
    .maxstack  2
    .locals init ([0] class [mscorlib]System.IO.StreamWriter w,
             [1] class [mscorlib]System.IO.StreamWriter w2)
    .language '{3F5162F8-07C6-11D3-9053-00C04FA302A1}', '{994B45C4-E6E9-11D2-903F-00C04FA302A1}', '{5A869D0B-6611-11D3-BD2A-0000F80849BD}'
    .line 29,29 : 9,44 'AssemblyToProcess\\SimpleCases.cs'
    IL_0000:  ldstr      "log.txt"
    IL_0005:  call       class [mscorlib]System.IO.StreamWriter [mscorlib]System.IO.File::CreateText(string)
    IL_000a:  stloc.0
    .line 30,30 : 9,46 ''
    .try
    {
      IL_000b:  ldstr      "log2.txt"
      IL_0010:  call       class [mscorlib]System.IO.StreamWriter [mscorlib]System.IO.File::CreateText(string)
      IL_0015:  stloc.1
      .line 31,31 : 9,53 ''
      .try
      {
        IL_0016:  ldloc.0
        IL_0017:  ldstr      "I'm a lumberjack an' I'm ok."
        IL_001c:  callvirt   instance void [mscorlib]System.IO.TextWriter::WriteLine(string)
        .line 32,32 : 9,56 ''
        IL_0021:  ldloc.1
        IL_0022:  ldstr      "He's a lumberjack an' He's ok."
        IL_0027:  callvirt   instance void [mscorlib]System.IO.TextWriter::WriteLine(string)
        IL_002c:  leave.s    IL_0038
      }  // end .try
      finally
      {
        IL_002e:  ldloc.1
        IL_002f:  brfalse.s  IL_0037
        IL_0031:  ldloc.1
        IL_0032:  callvirt   instance void [mscorlib]System.IDisposable::Dispose()
        IL_0037:  endfinally
      }  // end handler
      IL_0038:  nop
      IL_0039:  leave.s    IL_0045
    }  // end .try
    finally
    {
      IL_003b:  ldloc.0
      IL_003c:  brfalse.s  IL_0044
      IL_003e:  ldloc.0
      IL_003f:  callvirt   instance void [mscorlib]System.IDisposable::Dispose()
      IL_0044:  endfinally
    }  // end handler
    IL_0045:  nop
    .line 33,33 : 5,6 ''
    IL_0046:  ret
  } // end of method SimpleCases::NestedUsings
} // end of class SimpleCases